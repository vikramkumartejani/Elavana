"use client";
import React, { useState } from "react";
import { useRouter } from "next/navigation";
import RippleButton from "../ui/Button";
import Link from "next/link";

const options = [
  {
    label: "As a Customer",
    value: "customer",
    icon: (
      <svg
        width="72"
        height="72"
        viewBox="0 0 72 72"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M60.7653 64.9167H54.8112L59.0877 60.764C59.9554 59.949 60.5645 58.897 60.8395 57.7388C61.1145 56.5805 61.0432 55.367 60.6345 54.2489C60.0537 52.6598 59.2705 49.583 58.5125 46.6087C57.6125 43.0819 56.7645 39.7505 56.1641 38.4891C55.3203 36.7284 53.6933 35.2701 51.3111 34.155C49.4998 33.3112 47.2541 32.6784 44.983 32.3859H44.9492C38.5114 31.763 32.3464 31.763 26.6272 32.3859H26.6061C24.3392 32.6784 22.0934 33.307 20.278 34.155C17.8958 35.2701 16.2631 36.7284 15.425 38.4891C14.8316 39.735 14.0188 43.0087 13.1595 46.4751C12.417 49.4719 11.6478 52.5698 11.0628 54.1744C10.6423 55.3135 10.5737 56.5527 10.8661 57.7312C11.1585 58.9098 11.7983 59.9733 12.7025 60.7837L17.1589 64.9195H11.2344C10.9547 64.9195 10.6864 65.0306 10.4886 65.2284C10.2908 65.4262 10.1797 65.6945 10.1797 65.9742C10.1797 66.2539 10.2908 66.5222 10.4886 66.72C10.6864 66.9178 10.9547 67.0289 11.2344 67.0289H60.7653C61.045 67.0289 61.3133 66.9178 61.5111 66.72C61.7089 66.5222 61.82 66.2539 61.82 65.9742C61.82 65.6945 61.7089 65.4262 61.5111 65.2284C61.3133 65.0306 61.045 64.9195 60.7653 64.9195V64.9167ZM21.0219 64.9167L19.4623 46.298H52.5373L50.9778 64.9167H21.0219ZM54.2544 39.3961C54.7662 40.4705 55.6297 43.8553 56.4636 47.1305C57.2342 50.1567 58.0316 53.2842 58.6489 54.9731C58.9167 55.7044 58.9634 56.4982 58.7834 57.2558C58.6034 58.0135 58.2045 58.7014 57.6364 59.234L57.6237 59.2467L53.2109 63.5315L54.7353 45.3333C54.7472 45.1878 54.7288 45.0415 54.6813 44.9035C54.6338 44.7655 54.5583 44.6389 54.4595 44.5315C54.3607 44.4241 54.2408 44.3383 54.1072 44.2795C53.9736 44.2208 53.8294 44.1903 53.6834 44.19H39.8037L38.9248 38.565L40.7206 34.1719C42.0444 34.2459 43.3808 34.3476 44.7298 34.477C50.3745 35.2125 53.3516 37.4991 54.2544 39.3961ZM38.4833 34.0748L36.8619 38.0376C36.7889 38.2156 36.766 38.4101 36.7958 38.6001L37.6691 44.1886H34.3306L35.2039 38.6001C35.2336 38.4101 35.2108 38.2156 35.1378 38.0376L33.5066 34.0495C35.1378 34.0101 36.7967 34.0186 38.4833 34.0748ZM14.1242 59.2172C13.5321 58.6885 13.1127 57.9939 12.9206 57.2237C12.7285 56.4536 12.7726 55.6434 13.047 54.8986C13.6728 53.1886 14.4533 50.0344 15.2112 46.9828C16.0086 43.7709 16.8327 40.4494 17.3333 39.3891C18.2375 37.4906 21.2159 35.2041 26.8663 34.4672C28.3016 34.3097 29.7664 34.1934 31.2608 34.1184L33.0748 38.5523L32.1959 44.1773H18.3162C18.1703 44.1776 18.026 44.2081 17.8925 44.2669C17.7589 44.3257 17.639 44.4114 17.5402 44.5188C17.4414 44.6262 17.3659 44.7529 17.3184 44.8909C17.2709 45.0289 17.2525 45.1752 17.2644 45.3206L18.7902 63.5386L14.1369 59.2172H14.1242Z"
          fill="#D97E59"
        />
        <path
          d="M37.8816 58.4761H34.1184C33.8387 58.4761 33.5705 58.5872 33.3727 58.785C33.1749 58.9828 33.0637 59.251 33.0637 59.5308C33.0637 59.8105 33.1749 60.0788 33.3727 60.2766C33.5705 60.4743 33.8387 60.5855 34.1184 60.5855H37.8816C38.1613 60.5855 38.4295 60.4743 38.6273 60.2766C38.8251 60.0788 38.9363 59.8105 38.9363 59.5308C38.9363 59.251 38.8251 58.9828 38.6273 58.785C38.4295 58.5872 38.1613 58.4761 37.8816 58.4761ZM36 56.9278C36.2781 56.9278 36.55 56.8453 36.7813 56.6908C37.0125 56.5363 37.1928 56.3167 37.2992 56.0597C37.4056 55.8027 37.4335 55.52 37.3792 55.2472C37.325 54.9744 37.191 54.7238 36.9944 54.5272C36.7977 54.3305 36.5471 54.1966 36.2743 54.1423C36.0016 54.0881 35.7188 54.1159 35.4619 54.2223C35.2049 54.3288 34.9853 54.509 34.8307 54.7403C34.6762 54.9715 34.5938 55.2434 34.5938 55.5216C34.5938 55.8945 34.7419 56.2522 35.0056 56.5159C35.2694 56.7796 35.627 56.9278 36 56.9278ZM35.8481 30.4805C39.0333 30.4805 42.1031 28.8562 44.4909 25.9073C46.6988 23.1778 47.9658 19.7423 47.9658 16.4855C47.9658 10.0069 42.7627 5.12155 35.8481 5.12155C28.9336 5.12155 23.7305 10.0069 23.7305 16.4855C23.7305 19.7494 24.9961 23.1848 27.2067 25.9073C29.5931 28.8562 32.663 30.4805 35.8481 30.4805ZM42.8512 24.5742C40.8713 27.0197 38.385 28.3711 35.8481 28.3711C33.3112 28.3711 30.825 27.0253 28.845 24.5742C27.1505 22.4845 26.0733 19.8197 25.875 17.2969C27.2809 17.7256 28.7408 17.9515 30.2105 17.9676C33.4097 17.9676 36.2025 16.7456 38.648 14.2875C40.6167 15.9933 42.8498 16.5544 45.8452 16.1156C45.8452 16.2337 45.8536 16.3505 45.8536 16.47C45.8564 19.2262 44.7328 22.2553 42.8512 24.5798V24.5742ZM28.7339 9.80858C30.5775 8.13936 33.1045 7.21827 35.8481 7.21827C38.5917 7.21827 41.1188 8.13936 42.9623 9.80858C44.2105 10.9365 45.1053 12.4018 45.5386 14.0273C42.8259 14.4253 41.0611 13.8473 39.3792 12.0586C39.2786 11.9511 39.1566 11.8658 39.021 11.8084C38.8854 11.751 38.7393 11.7226 38.5921 11.7251C38.4449 11.7276 38.2998 11.761 38.1663 11.823C38.0328 11.8851 37.9137 11.9744 37.8169 12.0853C34.6233 15.7416 30.8391 16.702 25.9383 15.1045C26.2201 13.0675 27.2098 11.1947 28.7339 9.81421V9.80858Z"
          fill="#D97E59"
        />
      </svg>
    ),
  },
  {
    label: "As a Service Provider",
    value: "provider",
    icon: (
      <svg
        width="60"
        height="60"
        viewBox="0 0 60 60"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M29.945 28.9022C33.9156 28.9022 37.3534 27.4781 40.1632 24.6683C42.972 21.8591 44.3965 18.4217 44.3965 14.4507C44.3965 10.4809 42.9725 7.04319 40.1627 4.23292C37.3529 1.42406 33.9151 0 29.945 0C25.9739 0 22.5364 1.42406 19.7272 4.23339C16.918 7.04272 15.4934 10.4805 15.4934 14.4507C15.4934 18.4217 16.9179 21.8595 19.7273 24.6689C22.5375 27.4777 25.9753 28.9022 29.9449 28.9022H29.945ZM22.2138 6.71952C24.3694 4.56386 26.8981 3.51609 29.945 3.51609C32.9914 3.51609 35.5205 4.56386 37.6766 6.71952C39.8322 8.87553 40.8805 11.4047 40.8805 14.4506C40.8805 17.4975 39.8322 20.0262 37.6766 22.1823C35.5205 24.3384 32.9914 25.3862 29.945 25.3862C26.899 25.3862 24.3704 24.3379 22.2138 22.1823C20.0577 20.0267 19.0094 17.4976 19.0094 14.4507C19.0094 11.4047 20.0577 8.87553 22.2138 6.71952ZM55.2313 46.137C55.1502 44.9679 54.9864 43.6924 54.7451 42.3459C54.5016 40.9889 54.1881 39.7063 53.8127 38.534C53.4245 37.3223 52.8977 36.1258 52.2453 34.979C51.5691 33.7888 50.7746 32.7524 49.8828 31.8997C48.9503 31.0075 47.8087 30.2902 46.4885 29.7669C45.1729 29.2465 43.7149 28.9829 42.1553 28.9829C41.5428 28.9829 40.9505 29.2341 39.8066 29.979C38.9934 30.5085 38.1778 31.0343 37.3598 31.5563C36.5738 32.0572 35.5091 32.5264 34.1939 32.9512C32.9108 33.3664 31.608 33.577 30.3216 33.577C29.0363 33.577 27.7335 33.3664 26.4494 32.9512C25.1358 32.5267 24.0705 32.0576 23.2858 31.5568C22.3753 30.9749 21.5515 30.444 20.8369 29.9784C19.6938 29.2337 19.1014 28.9823 18.489 28.9823C16.9289 28.9823 15.4714 29.2464 14.1563 29.7674C12.837 30.2897 11.6949 31.007 10.7615 31.9001C9.86978 32.7534 9.07513 33.7892 8.39943 34.979C7.7481 36.1257 7.22076 37.3218 6.83252 38.5345C6.45752 39.7068 6.14404 40.9889 5.90053 42.3459C5.65877 43.6907 5.49541 44.9665 5.41432 46.1384C5.33463 47.2841 5.29443 48.4766 5.29443 49.6814C5.29443 52.8135 6.29006 55.349 8.25341 57.2189C10.1925 59.0644 12.7579 59.9999 15.8783 59.9999H44.7687C47.8883 59.9999 50.4536 59.0643 52.3932 57.219C54.357 55.3504 55.3526 52.814 55.3526 49.681C55.3521 48.472 55.3115 47.2796 55.2313 46.137ZM49.9689 54.6715C48.6876 55.8909 46.9865 56.4838 44.7681 56.4838H15.8784C13.6597 56.4838 11.9586 55.8909 10.6778 54.6721C9.4213 53.4758 8.81064 51.8431 8.81064 49.6814C8.81064 48.5571 8.84767 47.4471 8.92197 46.3814C8.99415 45.3359 9.14204 44.1873 9.36142 42.9669C9.57786 41.7617 9.85337 40.6306 10.1811 39.6066C10.4957 38.6246 10.9246 37.6524 11.4565 36.7158C11.9641 35.8231 12.5482 35.0573 13.1927 34.4403C13.7957 33.863 14.5556 33.3906 15.4509 33.0364C16.279 32.7085 17.2097 32.5291 18.22 32.502C18.343 32.5676 18.5624 32.6926 18.9176 32.9241C19.6404 33.3952 20.4735 33.9326 21.3946 34.5208C22.4328 35.1828 23.7703 35.7806 25.3684 36.2964C27.0021 36.8247 28.6684 37.0929 30.3222 37.0929C31.9762 37.0929 33.6429 36.8247 35.2757 36.2969C36.8751 35.7801 38.2122 35.1828 39.2519 34.5199C40.1944 33.9175 41.0042 33.3957 41.7269 32.9241C42.0822 32.6929 42.3015 32.5675 42.4246 32.5021C43.4354 32.5291 44.366 32.7085 45.1945 33.0363C46.0894 33.3906 46.8494 33.8635 47.4522 34.4402C48.0967 35.0568 48.6808 35.8227 49.1884 36.7163C49.7208 37.6524 50.1503 38.6252 50.4643 39.6061C50.7925 40.6315 51.0685 41.7621 51.2846 42.9665C51.5034 44.1892 51.6517 45.3382 51.724 46.3819V46.3828C51.7987 47.4443 51.8362 48.554 51.8366 49.6814C51.8362 51.8435 51.2255 53.4759 49.969 54.6715H49.9689Z"
          fill="#D97E59"
        />
      </svg>
    ),
  },
];

const Registration = () => {
  const [selected, setSelected] = useState("customer");
  const router = useRouter();

  return (
    <div className="flex flex-col items-center justify-center py-6 sm:py-10 px-4">
      <h2 className="text-[24px] md:text-[32px] leading-[30px] sm:leading-[40px] font-bold text-center mb-6 sm:mb-8 text-[#252525] tracking-[0.5px]">
        Join as a Service Provider or Customer
      </h2>

      <div className="flex items-center flex-wrap md:flex-nowrap gap-6 lg:gap-[50px] mb-6 sm:mb-8">
        {options.map((option) => (
          <button
            key={option.value}
            type="button"
            onClick={() => setSelected(option.value)}
            className={`flex flex-col items-start min-w-full md:min-w-[313px] px-6 sm:px-8 py-8 sm:py-10 rounded-2xl sm:rounded-[24px] border sm:h-[212px] transition-all shadow-sm bg-white focus:outline-none ${
              selected === option.value
                ? "border-[#3A96AF] shadow-md"
                : "border-transparent hover:border-[#3A96AF]"
            }`}
            aria-pressed={selected === option.value}
            style={{ boxShadow: "0px 4px 24px 0px #3A96AF14" }}
          >
            <span className="mb-6 sm:mb-8">{option.icon}</span>
            <span className="text-[18px] sm:text-[24px] leading-[20px] sm:leading-[28px] tracking-[0.5px] font-medium text-black">
              {option.label}
            </span>
          </button>
        ))}
      </div>

      <RippleButton
        type="button"
        className="w-full max-w-[410px] h-[44px] sm:h-[56px] border border-[#9CB0C9] bg-[#3A96AF] hover:bg-[#2a7a8f] transition duration-200 text-white rounded-lg sm:rounded-[16px] font-semibold text-[16px] sm:text-[20px] sm:leading-[24px] tracking-[0.5px] mb-4 sm:mb-8"
        onClick={() => router.push("/sign-up")}
      >
        Create Account
      </RippleButton>

      <div className="text-center text-[14px] sm:text-[20px] sm:leading-[24px] font-normal tracking-[0.5px] text-[#676D75]">
        Already have a account?{" "}
        <Link
          href="/login"
          className="text-[#3A96AF] font-semibold hover:underline focus:outline-none"
        >
          Log In
        </Link>
      </div>
    </div>
  );
};

export default Registration;
